apiVersion: v1
kind: Namespace
metadata:
  name: pantheon
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pantheon-config
  namespace: pantheon
data:
  FIREBASE_DATABASE_URL: "https://your-project.firebaseio.com"
  METERED_TURN_SERVERS: "turn:a.relay.metered.ca:80,turn:a.relay.metered.ca:443"
---
apiVersion: v1
kind: Secret
metadata:
  name: pantheon-secrets
  namespace: pantheon
type: Opaque
stringData:
  TWILIO_ACCOUNT_SID: "your-twilio-account-sid"
  TWILIO_AUTH_TOKEN: "your-twilio-auth-token"
  METERED_TURN_USERNAME: "your-metered-username"
  METERED_TURN_CREDENTIAL: "your-metered-credential"
  REDIS_PASSWORD: "your-redis-password"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pantheon-redis
  namespace: pantheon
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pantheon-redis
  template:
    metadata:
      labels:
        app: pantheon-redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        command: ["redis-server", "--appendonly", "yes", "--requirepass", "$(REDIS_PASSWORD)"]
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pantheon-secrets
              key: REDIS_PASSWORD
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-data
          mountPath: /data
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: pantheon-redis
  namespace: pantheon
spec:
  selector:
    app: pantheon-redis
  ports:
  - port: 6379
    targetPort: 6379
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: pantheon
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pantheon-server
  namespace: pantheon
spec:
  replicas: 3
  selector:
    matchLabels:
      app: pantheon-server
  template:
    metadata:
      labels:
        app: pantheon-server
    spec:
      containers:
      - name: signaling-server
        image: pantheon/signaling-server:latest
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3001"
        - name: SERVER_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SERVER_REGION
          value: "us-east"
        - name: REDIS_HOST
          value: "pantheon-redis"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pantheon-secrets
              key: REDIS_PASSWORD
        - name: FIREBASE_DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: pantheon-config
              key: FIREBASE_DATABASE_URL
        - name: TWILIO_ACCOUNT_SID
          valueFrom:
            secretKeyRef:
              name: pantheon-secrets
              key: TWILIO_ACCOUNT_SID
        - name: TWILIO_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: pantheon-secrets
              key: TWILIO_AUTH_TOKEN
        - name: METERED_TURN_USERNAME
          valueFrom:
            secretKeyRef:
              name: pantheon-secrets
              key: METERED_TURN_USERNAME
        - name: METERED_TURN_CREDENTIAL
          valueFrom:
            secretKeyRef:
              name: pantheon-secrets
              key: METERED_TURN_CREDENTIAL
        - name: METERED_TURN_SERVERS
          valueFrom:
            configMapKeyRef:
              name: pantheon-config
              key: METERED_TURN_SERVERS
        ports:
        - containerPort: 3001
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
---
apiVersion: v1
kind: Service
metadata:
  name: pantheon-server
  namespace: pantheon
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: LoadBalancer
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 86400
  selector:
    app: pantheon-server
  ports:
  - port: 80
    targetPort: 3001
    protocol: TCP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: pantheon-server-hpa
  namespace: pantheon
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pantheon-server
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60